patterns_and_insertions:
    [
        # Use single ticks for regex patterns
        # http://blogs.perl.org/users/tinita/2018/03/strings-in-yaml---to-quote-or-not-to-quote.html
        # You need to escape \ with \\ in the pattern, for instance for \\todo
        # Use Python named groups https://docs.python.org/3/library/re.html#regular-expression-examples
        # Escape {{ and }} in the insertion expression
        # 
        # Optional:
        # Set strip_whitespace to n to disable white space stripping while replacing the pattern. (Default: y)

        {
            "pattern" : '(?:\\figcomp{\s*)(?P<first>.*?)\s*}\s*{\s*(?P<second>.*?)\s*}\s*{\s*(?P<third>.*?)\s*}',
            "insertion" : '\parbox[c]{{ {second} \linewidth}} {{ \includegraphics[width= {third} \linewidth]{{figures/{first} }} }}',
            "description" : "Replace figcomp",
            # "strip_whitespace": n 
        },
    ]
verbose: False

# LaTeX commands that will be deleted. Useful for e.g.
#                         user-defined \todo commands.
commands_to_delete: [
    '\\todo',
]
# LaTeX commands that will be deleted but the text 
#                         wrapped in the commands will be retained.
# Useful for
                        # commands that change text formats and colors, which
                        # you may want to remove but keep the text within.
commands_only_to_delete: [
]

# LaTeX environments that will be deleted. Useful for e.g. 
#                         user-defined comment environments. For example, to 
#                         delete all occurrences of \begin{note} ... \end{note}
environments_to_delete: [

]